2010-04-06 Vincent Levesque <vlev@cs.ubc.ca>
	* mutex: Cleaned up and moved to root (i.e. no longer part of xenomai++).
	* laterophics.h: Removed Init() and Shutdown(). These function were only used to call srand(), which should not be messed with a a library. The function rand() is used in laterophics but only for graphics so its seed is not critical.
	* laterophics.h: Cleaned up global mutex, moved it to mutex.h. Removed laterophics.h/cpp. Moved mainpage doc to mainpage.h.

2010-04-05 Vincent Levesque <vlev@cs.ubc.ca>
	* Added "make doc" target which compiles the doxygen docs.
	* mutex: Replaced Guard by boost::scoped_lock. Mutex is now compatible with Boost's templates.

2010-03-17 Vincent Levesque <vlev@cs.ubc.ca>
	* Switched from autotools to CMake.

2010-03-01 Vincent Levesque <vlev@cs.ubc.ca>
	* Minor cleanup, mostly in generators.

2010-02-28 Vincent Levesque <vlev@cs.ubc.ca>
	* generator: Started phasing out RangeImg. Clean up.
	* doxygen.cfg: Added basic support for doxygen. To use it, install package doxygen, doxygen-gui, and graphviz. Then run "doxygen doxygen.cfg". The output will be in docs/html/index.html.

2010-02-26 Vincent Levesque <vlev@cs.ubc.ca>
	* planar: Moved all files to laterophics root.
	* testing: Removed most test applications.
	* generatorwidget,positiongenwidget: Removed.
	* generatorhandle: Removed. Copied temporarily to demo.
	* togglegen: Removed. Use Toggle pattern instead.
	* generator: Removed support for stored illustrations.

2010-02-24 Vincent Levesque <vlev@cs.ubc.ca>
	* xeno.task: Modified so that a Task can be stopped even if not started without hanging.

2010-02-21 Vincent Levesque <vlev@cs.ubc.ca>
	* graphics.toggle: Added pattern to replace ToggleGen. Refreshing visuals may be an issue since Patterns do not support caching illustrations as Generators do.

2010-02-16 Vincent Levesque <vlev@cs.ubc.ca>
	* planar.imageeditordialog: Removed.
	* planar.generator: Removed obsolete "Vector" type. Only "Canvas" is now recognized.
	* planar.combogen: Removed. Should be replaced by Canvas.
	* planar.audiogen: Removed, replaced by AudioPattern.
	* graphics.audiopattern: Created to replace AudioGen. Fixed a bug that skipped first play of each sound.

2010-02-10 Vincent Levesque <vlev@cs.ubc.ca>
	* planar.dotgen: Removed. The Dots pattern has similar functionality, with the exception of support for the specification of dot position by bitmap.

2010-02-08 Vincent Levesque <vlev@cs.ubc.ca>
	* planar.audiogenwidget: Removed.
	* filter.qilowpass,delay: Removed QiLowPass and Delay. Moved Average to laterophics. Removed filter.
	* xeno.timingmonitor: Removed.

2010-02-07 Vincent Levesque <vlev@cs.ubc.ca>
	* planar.virtualsurfacewidget: Removed, merged with laterophics.virtualsurfacewidget
	* planar: Removed obsolete planar namespace.
	* laterophics.generator: Removed, merged with planar.generator.

2010-02-05 Vincent Levesque <vlev@cs.ubc.ca>
	* planar.device: Removed latero::graphics::planar::Device, replaced it with latero::Tactograph.
	* generatorhandle: Removed.
	* generator,state: Merged latero::graphics::State and latero::graphics::planar:State. Started cleaning latero::graphics::Generator for merge with latero::graphics::planar::Generator.

2009-12-30 Vincent Levesque <vlev@cs.ubc.ca>
	* graphics.group: Added a new compositing operation named "reactive" that blends between the first two patterns according to the exploration behavior, or more precisely the direction and speed of the exploration velocity. This effectively replaces the stand-alone "blend" pattern and generalizes the effect of BlendTexture to generic patterns. In the process, the format of the "operator" tag in the XML files was modified to accomodate sub-parameters, Modulator information for now. 
	* graphics.blend: Removed, replaced by new compositing operator in Group. See above.

2009-12-29 Vincent Levesque <vlev@cs.ubc.ca>
	* graphics.blend: Added a Blend pattern that can alternate between two patterns based on the exploration velocity, exactly like BlendTexture. The pattern is fully implemented but the GUI lacks support for replacing the two underlying patterns. This pattern should most likely be integrated as an additional compositing operator in Group.

2009-12-27 Vincent Levesque <vlev@cs.ubc.ca>
	* gtk: Removed ManagedNotebook, Notebook, Scope, ScopeDisplay, ScopeTrace.
	* linear: I removed the linear component of the library. This is a first step towards refocusing the library on tactile graphics and eliminating components that have become non-essential and difficult to maintain without appropriate hardware.
	* fixed: I also removed the fixed component of the library, leaving only the 2D component.

2009-01-01 Vincent Levesque <vleves@cim.mcgill.ca>
	* Many changes were made from January to August 2009 but they were not documented here.

2008-11-28 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.texture: The amplitude of the vibration is now programmable.

2008-11-26 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.blendtexture: The BlendTexture blends two textures according to a "modulator" that specifies an alpha value as a function of sensor readings or other variables. A new sublibrary was created for modulators under the planar directory to develop modulators. There is currently only one that can be used to toggle between the textures as a function of the direction of exploration.

2008-11-24 Vincent Levesque <vleves@cim.mcgill.ca>
	* filter.average: Modified to use an array instead of a queue. The implementation is not quite as nice but this eliminates dynamic memory allocation in the realtime loop (insert,get).
	* planar.velocityestimator: Added a crude velocity estimator (based on Braille work). Velocity information is now gathered in the tactile engine and propagated to generators, positiongens and textures.

2008-11-23 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.texture: Added previews to individual textures.
	* planar.combotexture: Added support for alpha blending. The user is correctly setting the list of textures (a,b,k such that result=k*a+(1-k)b. The tabs are updated to reflect the role of each texture in the operation.

2008-11-19 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar, linear: The linear and planar namespaces now have a typedef that maps a "Device" to the lateror devices. This allows us to use "Device" instead of "latero::TactileDisplay1dof".
	* planar.texture: Textures are now aware of the device. This makes the design somewhat more ugly but enables the use of the size of the workspace for drawing and for GUI controls. For example, it would now be possible to set the seed point as "center". 

2008-11-19 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.texture: All textures now have the ability to vibrate, without using the grating's vibration.
	* planar.oscillator: Optimized to avoid recomputing the same values 64 times per cycle. The performance boost seems to be significant.

2008-11-18 Vincent Levesque <vleves@cim.mcgill.ca>
	* Cleaned up xml.h. Two objects (XMLOutputNode and XMLInputNode) are now used as convenience classes to simplify reading and writing to XML files. The result is cleaner code when operating with XML and cleaner facilities to support relative path names.

2008-11-17 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.grating: Gratings can now be inverted.
	* planar.texture: Textures can now be inverted. This is useful for operations like multiplications of textures. The illustrations are not currently drawned correctly.

2008-11-13 Vincent Levesque <vleves@cim.mcgill.ca>
	* VirtualSurfaceArea: Added a context menu to save the image shown.

2008-11-12 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.texture: Every texture now has an amplitude.
	* planar.ComboTexture: ComboGratingTexture was renamed ComboTexture. It now supports three operations: op_multiply, op_add, op_max. The last two are new and mean that texture are either added (with saturation) or the maximum of both textures is taken at each point.
	* planar.texture: Texture now have a default icon which can be overriden in the XML files. 

2008-11-10 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.Grating: Grating can now be made to vibrate. This makes it possible to turn a grating into a modulated vibration at the click of a button.
	* planar.AxialGratingTexture: The grating now saturated in the middle to prevent very high spatial frequencies.

2008-11-07 Vincent Levesque <vleves@cim.mcgill.ca>
	* gtk: ScaleEntryFrame and friends were replaced by HNumWidget and VNumWidget. This numeric widget supports all previous modes and also allows alternating between different units as an option.
	* planar.GratingTexture: Velocity can now be specified either in units/s or Hz.

2008-11-04 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.texture: Textures are now selected from a set of predefined XML files.

2008-11-02 Vincent Levesque <vleves@cim.mcgill.ca>
	* all: Files (xml, images, etc) are now save with 0666 permissions so that others than root can work on them.
	* planar.generator: The Generator class now has the functionalities of GeneratorFactory. The format of the XML files for generators was modified to match that of the new XML texture files.

2008-09-22 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.vectorgen: Added moving vibration bands to Circle and Line.

2008-09-20 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.VibroGen: VibroGen was removed. The same functionality can now be obtained from a TextureGen with a VibroTexture.

2008-09-18 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.WaveGen: WaveGen was renamed TextureGen.
	* planar.VibroGen: Vibration is now just another texture. Integration is not complete yet.

2008-09-17 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.VibroGen: VibroGen is now a PositionGen.
	* planar: Planar generators now use the BiasedImg rather than the RangeImg. The changes the meaning of a deflection from -1=left,+1=right to 0=right,1=left. This greatly simplified most operations since resting on the right has become the standard. It's now possible to add or scale different signals without complicated operations to maitain the rest position on the right. 

2008-09-16 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar: Removed any trace of RestDeflection. This is now assumed to be 1.0 (right).

2008-09-11 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.wavegen: The signification of the orientation has been changed. The orientation used to indicate the direction parallel to the ridge of the grating in cartesian coordinates. The addition of gaps makes this parameter ambiguous since the grating is no longer symmetric around the seed point. The orientation therefore now indicates the direction perpendicular to the ridges, and the direction in which the grating should be rendered. For consistency, the coordinates system was also modified to match that of the vector graphics and seed point specification (i.e. Y increases down). This is counterintuitive but consistent with the default coordinates for many drawing systems, including cairo and svg.

2008-09-10 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.wavegen: Supporting both rest positions of 0 and 1 in WaveGen was becoming a hassle. To simplify things only support for 1 remains. Much like dots, ridges of a grating are felt much stronger when spaced out if resting at 1 rather than 0. There is currently no reason to support any other rest position, maybe we should standardize on rest position of 1 for all generators from now on (i.e. remove from Generator and VibroGen).

2008-09-08 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.texture: Gratings were refactored. The waveform of the gratings is now modifiable. The sinusoid can currently be skewed and gaps can be added on the sides.
	* gtk.plot: corrected orientation (positive y is now up)

2008-08-05 Vincent Levesque <vleves@cim.mcgill.ca>
	* planar.wavegen: The Grating texture generator is now part of a separate class.

2008-08-04 Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.dotgen: Dots are now vectorial objects in VectorGen. The old DotGen now derives from VectorGen and uses it for rendering, handling mostly the conversion from image-based dots to their vectorial representation.

2008-07-30 Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.vectorgen: added line object

2008-07-29 Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.wavegen: fixed visual rendering of axial texture (slow, but working)
	* planar.vectorgen: now supporting multiple vector objects

2008-07-28 Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.dotarraygen: removed (this has been superceded by dotgen for a while)
	* planar.vector: I moved vectorgen and all associated files to the "vector" subdirectory. This may be temporary. I also exctracted a "circle" class from it. Multiple circles can now be shown on the screen.

2008-07-18 Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.generator: added ability to store and retrieve a precomputed illustration (used in schoolbook)
	* planar.generator: added virtual method to handle keypressed (used in ToggleGen, schoolbook)
	* planar.togglegen: new generator that toggles between two generators (can be loaded with xml)

2008-06-25  Vincent Levesque  <vleves@cim.mcgill.ca>
	* The constructor in laterophics/virtualsurfacewidget.cpp was modified to disable animations. This is currently necessary to reduce the load on the system and allow decent interaction with the user interface at update rates in the order of 1kHz. A better solution is needed.

2008-05-14  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Now using Audiere for sound instead of libgnome. Works with Ubuntu Hardy Heron.

2008-04-22  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Created a "fixed" sublibrary for generators that don't rely on position.

2008-04-13  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Added typedefs for shared_ptrs of generators (e.g. GeneratorPtr) to simplify code.
	* The GeneratorSet code was cleaned and partially moved to the GrandIllustion program.
	* Adapted linear generators to use smart pointers.

2008-04-12  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Generators now create their own widgets. This eliminates the need for the WidgetFactory and allows generators defined outside of the library to be used by library code that needs to create appropriate widgets.

2008-04-11  Vincent Levesque  <vleves@cim.mcgill.ca>
	* The code in linear/elements is now in pattern/. This better conveys the idea that these elements are used in both 1D and 2D contexts. Ideas for a better name?

2008-04-07  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.WaveGen: added radial gratings and superposition of two gratings (needs cleanup)

2008-04-04  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.WaveGen: now supports radial gratings

2008-04-01  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.WaveGen: now time-varying with a wave velocity in mm/s.
	* planar.VibroGen: added a stroke parameter that controls the amplitude of the stroke (e.g. 50% or 100%).

2008-03-19  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar: WaveGen now generates illustrations as fast for diagonals as other orientations, using only Cairomm. VibGen is the only remained generator that doesn't use Cairomm.

2008-02-28  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar: Masks can now be loaded from a Gdk::pixbuf instead of a file. This makes it possible to create masks on the fly using cairomm (see demo-haptics08).

2008-02-25  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar: A new mecanism was implemented to get information about a generator's rest deflection. This is important when superposing different renderings. The current implementation is probably not the best but it should allow minimal error checking for the time being. It is assumed that only renderings with identical rest deflection can be superposed.
	* planar.WaveGen, planar.VibGen: WaveGen and VibGen can now be configured to place the actuators in the middle or on the right when at rest. This allows them to be combined with DotGen. The default remains the same as it was but an XML option can switch to "rest on right" mode.
	* planar.ComboGen: DotGen can now be combined with VibGen or WaveGen provided that they are set to "rest on right" mode.
	
2008-02-11  Vincent Levesque  <vleves@cim.mcgill.ca>
	* laterophics: The library now accomodate most features of the new 2D planar carrier (Puck). The main modification is the support for rotation of the tactile display both for tactile rendering and visualization.

2007-07-31  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar: now using boost::shared_ptr to deal with all Generators

2007-07-17  Vincent Levesque  <vleves@cim.mcgill.ca>
	* laterophics: The library now has a global lock. Individual object locks were removed. See laterophics.h for convenience macros. The implementation will most likely change since its not really object-oriented right now.

2007-07-13  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar: began minimizing use of locks within Render calls.	

2007-06-27  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Generator: CreateFrame(...) is now called Render(...)
	* planar.FreqGen: removed, modulating by frequency doesn't seem to work
	* Generator: No longer requires UpdateRateHz. Computations using time can now be done more cleanly
	  by carefully using State.time (beware of rounding errors when casting to float).

2007-06-14  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.DotArrayGen, planar.WaveGen: Removed support for units relative to TD spacing.  All XML files were modified accordingly.

2007-06-08  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.DotArrayGen: Removed dependency on mask. All XML files were modified accordingly.

2007-05-04  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.PositionGen: GetDeflection is now called while locked. This dramatically reduces the time taken to create a frame.

2007-04-25  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar: removed MaskedGen (generator now use the masks directly)
	* planar: added VirtualSurfaceWidget that updates itself (needs more work)
	* planar.DotArrayGen: can now optionaly be render like braille dots (needs more work & evaluation)

2007-04-24  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.wavegen: both horizontal and vertical gratings are now drawn, other orientations are drawn but very inefficently
	
2007-04-23  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.wavegen: halved the pitch for the illustration, seems closer to perception
	* planar.visualizewidget: added badly named widget that displays a low-level representation of a PositionGen's map
	* planar.dotarraygen: now supports visualization

2007-04-19  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.wavegen: added partial support for different orientations

2007-04-18  Vincent Levesque  <vleves@cim.mcgill.ca>
	* planar.positiongen: added a visualization feature to see the exact mapping (incomplete)
	* linear.DotGen: removed "enable" propery. (Jay's Wishlist)
	* linear.PositionGenWidget: PositionGraph can now be removed by calling ShowPositionGraph(false). (Jay's Wishlist)
	* linear.DotGenWidget: adjustement are now using the virtual surface width. (Jay's Wishlist)

2007-04-16  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Moved planar.Manager to studio.
	* Added laterophics.Init() and laterophics.Shutdown() functions so that we can call similar functions of
	  libgnome only once.

2007-04-15  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Integrated xenomai++ into laterophics/xenomai++.

2007-04-12  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Added minimal support for sound tags on 2D masks. The sound is generated with gnome-sound, but audiere or 
	  other libs might be better.
	* Added basic support for zooming in 2D tactile images. It is now possible to increase the scale such
	  that the mask extends beyond the virtual surface.

2007-04-09  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Integrated libgtkvl into laterophics/gtk.
	* Integrated libfilter into laterophics/filter.
	* Renamed namespace plannar to planar (typo). Renamed directories 1dof and 2dof to linear
	  and planar to match namespaces.

2007-03-08  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Minor cleanups in BrailleGenWidget. The standard PositionGenWidget modifiers (shift, scale, etc.) are not shown by default anymore.

2007-03-05  Vincent Levesque  <vleves@cim.mcgill.ca>
	* DotArrayGen now uses cairomm to draw its illustration. The code is much cleaner, runs faster and paves the way to
	  realtime rendering with cairo instead of going through intermediate pixbufs.

2007-02-28  Vincent Levesque  <vleves@cim.mcgill.ca>
	* BrailleGen and friends: I implemented a rough symbolic representation for all the different modes. I also cleaned
	  up the terminology used for those modes, both in the code and in the GUI.
	* Split up latero::graphics::linear::Generator in two: a Generator that handles frame requests based on position and
	  a PositionGen specialization that maps piezo positions to their deflection. This was done mainly to allow
	  Jerome's work on trigger-based 1DOF rendering to use the 1DOF code without relying on or overriding the
	  PositionGen functionality. The change was propagated to widgets, sets, etc.

2007-02-27  Vincent Levesque  <vleves@cim.mcgill.ca>
	* Replaced all instances of the word "voltage" by "deflection" or "frame".
	* Began work on symbolic representation of Braille.
